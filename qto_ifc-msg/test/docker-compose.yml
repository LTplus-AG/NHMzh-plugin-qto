services:
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ACCESS_KEY: ROOTUSER
      MINIO_SECRET_KEY: CHANGEME123
      MINIO_USE_SSL: false
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"

  zookeeper:
    image: wurstmeister/zookeeper:latest
    platform: linux/amd64
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    platform: linux/amd64
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "ifc-files:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper


  qto-ifc-msg:
    build:
      context: ../../qto_ifc-msg
      dockerfile: Dockerfile
    depends_on:
      - kafka
    environment:
      ENVIRONMENT: ${ENVIRONMENT:-development}
      KAFKA_BROKER: kafka:9093
      KAFKA_IFC_TOPIC: ${KAFKA_IFC_TOPIC:-ifc-files}
      BACKEND_URL: http://host.docker.internal:8000
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_USE_SSL: false
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-ROOTUSER}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-CHANGEME123}
      MINIO_IFC_BUCKET: ${MINIO_IFC_BUCKET:-ifc-files}
    restart: on-failure

volumes:
  minio_data:



